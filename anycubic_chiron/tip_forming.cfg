########################################################################################################################
# Happy Hare MMU Software
# Supporting macros
#
# THIS FILE IS READ ONLY
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Standalone Tip Forming roughly based on Superslicer
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
#
# To configure, set
#   'form_tip_macro: _MMU_FORM_TIP' in 'mmu_parameters.cfg'
#
# This macro is, by default, called by Happy Hare to form filament tip
# prior to unloading. This will need to be tuned for your particular
# setup.  Although the slicer can also perform similarly you must also
# tune tips here. The slicer will be used when printing, this logic will be
# used when not in print.  Because of the need to setup twice, it is recommended
# that you turn off slicer tip forming and to use this routine in all circumstances.
#
# To force Happy Hare to always run this when loading filament add:
#   'force_form_tip_standalone: 1' in 'mmu_parameters.cfg'
#
# Also decide on whether you want toolhead to remain over wipetower while tool
# changing or move to park location (see 'enable_park' in mmu_sequence.cfg)
#

# custom
[gcode_macro FILAMENT_UNLOAD]
description: Unload filament from the extruder with tip forming
gcode:
    {% set DISTANCE = params.DISTANCE|default(400)|float %}  # How far to retract
    {% set SPEED = params.SPEED|default(300)|float %}       # Speed for final retraction
    {% set TEMP = params.TEMP|default(0)|int %}            # Temperature for unload
    
    {% if TEMP == 0 %}
        # If no temp specified, use current target or 200 as fallback
        {% set TEMP = printer.extruder.target %}
        {% if TEMP == 0 %}
            {% set TEMP = 200 %}
        {% endif %}
    {% endif %}
    
    # Set and wait for temperature
    M104 S{TEMP}                 # Set temperature
    M117 Heating to {TEMP}°C     # Display message
    M109 S{TEMP}                 # Wait for temperature
    
    SAVE_GCODE_STATE NAME=UNLOAD_state
    G91                          # Relative positioning
    
    # Form the tip first
    _MMU_FORM_TIP
    
    # Additional retraction to fully remove filament
    G92 E0                       # Reset extruder position
    _MMU_MOVE_SEGMENT DISTANCE=-{DISTANCE} SPEED={SPEED}  # Retract remaining distance
    
    RESTORE_GCODE_STATE NAME=UNLOAD_state
    M400                         # Wait for moves to complete
    
    M117 Filament unload complete

[gcode_macro _MMU_MOVE_SEGMENT]
description: Helper macro to break down long moves into segments <= 50mm
gcode:
    {% set distance = params.DISTANCE|float %}
    {% set speed = params.SPEED|float %}
    {% set segment_size = 50 %}  # Maximum segment size
    
    {% if distance|abs > segment_size %}
        {% set segments = (distance|abs / segment_size)|round(0, 'ceil')|int %}
        {% set segment_distance = distance / segments %}
        
        {% for i in range(segments) %}
            G1 E{segment_distance} F{speed}
        {% endfor %}
    {% else %}
        G1 E{distance} F{speed}
    {% endif %}

# custom
[gcode_macro _MMU_FORM_TIP_VARS]
variable_unloading_speed_start: 200  # Speed for initial retraction (mm/s). Match Prusa's proven speed
variable_unloading_speed: 20         # Speed for main retraction phase (mm/s)
variable_ramming_volume: 15          # Amount of filament to ram (mm³). Lower value reduces stringing
variable_ramming_volume_standalone: 15  # Ramming volume when not printing

# Cooling tube parameters
variable_cooling_tube_length: 15     # Length of cooling moves (mm). Longer moves = more cooling
variable_cooling_tube_position: 75   # Distance to park position from nozzle (mm)
variable_initial_cooling_speed: 10   # Speed of first cooling move (mm/s)
variable_final_cooling_speed: 40     # Speed of final cooling move (mm/s)
variable_cooling_moves: 5            # Number of cooling moves

# Temperature control
variable_toolchange_temp: 0          # Temperature for tip forming (0 = disabled)
variable_toolchange_fan_assist: 0    # Enable part cooling fan during tip forming
variable_toolchange_fan_speed: 50    # Fan speed during tip forming (%)

# Skinnydip settings for PLA
variable_use_skinnydip: 0            # Enable skinnydip feature (good for PLA)
variable_use_fast_skinnydip: 1       # Don't wait for temp before skinnydip
variable_skinnydip_distance: 15      # How far to dip back into hotend (mm)
variable_dip_insertion_speed: 33     # Speed of dipping movement (mm/s)
variable_dip_extraction_speed: 70    # Speed of exit movement (mm/s)
variable_melt_zone_pause: 50         # Pause in hot zone (ms)
variable_cooling_zone_pause: 0       # Pause in cold zone (ms)

# Parking settings
variable_extruder_eject_speed: 100   # Speed for final eject/park move (mm/s)
variable_parking_distance: 75        # Distance to park from nozzle (mm)

gcode:
    # This macro just holds variables, no gcode needed


[gcode_macro _MMU_FORM_TIP]
description: Standalone macro that mimics Superslicer process

gcode:
    {% set final_eject = params.FINAL_EJECT|default(0)|int %}
    {% set vars = printer['gcode_macro _MMU_FORM_TIP_VARS'] %}
    {% set park_vars = printer['gcode_macro _MMU_PARK'] %}
    {% set unloading_speed_start = vars['unloading_speed_start']|int %}
    {% set unloading_speed = vars['unloading_speed']|int %}
    {% set ramming_volume = vars['ramming_volume']|float %}
    {% set ramming_volume_standalone = vars['ramming_volume_standalone']|float %}
    {% set cooling_tube_length = vars['cooling_tube_length']|float %}
    {% set cooling_tube_position = vars['cooling_tube_position']|float %}
    {% set initial_cooling_speed = vars['initial_cooling_speed']|int %}
    {% set final_cooling_speed = vars['final_cooling_speed']|int %}
    {% set cooling_moves = vars['cooling_moves']|int %}
    {% set toolchange_temp = vars['toolchange_temp']|default(0)|int %}
    {% set use_skinnydip = vars['use_skinnydip']|default(false)|lower == 'true' %}
    {% set use_fast_skinnydip = vars['use_fast_skinnydip']|default(false)|lower == 'true' %}
    {% set skinnydip_distance = vars['skinnydip_distance']|float %}
    {% set dip_insertion_speed = vars['dip_insertion_speed']|int %}
    {% set dip_extraction_speed = vars['dip_extraction_speed']|int %}
    {% set melt_zone_pause = vars['melt_zone_pause']|default(0)|int %}
    {% set cooling_zone_pause = vars['cooling_zone_pause']|default(0)|int %}
    {% set extruder_eject_speed = vars['extruder_eject_speed']|int %}
    {% set parking_distance = vars['parking_distance']|default(0)|float %}
    {% set orig_temp = printer.extruder.target %}
    {% set next_temp = params.NEXT_TEMP|default(orig_temp)|int %}

    SAVE_GCODE_STATE NAME=MMU_FORM_TIP_state

    G91 # Relative positioning
    M83 # Relative extrusion
    G92 E0

    # Step 1 - Ramming
    # This is very generic and unlike slicer does not incorporate moves on the wipetower
    {% set ramming_volume = ramming_volume_standalone if not printing else ramming_volume %}
    {% if ramming_volume > 0 %} # Standalone Ramming
        {% set ratio = ramming_volume / 23.0 %}
        G1 E{0.5784 * ratio} F299 #7
        G1 E{0.5834 * ratio} F302 #3
        G1 E{0.5918 * ratio} F306 #6
        G1 E{0.6169 * ratio} F319 #6
        G1 E{0.3393 * ratio} F350 #0
        G1 E{0.3363 * ratio} F350 #0
        G1 E{0.7577 * ratio} F392 #6
        G1 E{0.8382 * ratio} F434 #3
        G1 E{0.7776 * ratio} F469 #9
        G1 E{0.1293 * ratio} F469 #9
        G1 E{0.9673 * ratio} F501 #2
        G1 E{1.0176 * ratio} F527 #2
        G1 E{0.5956 * ratio} F544 #6
        G1 E{0.4555 * ratio} F544 #6
        G1 E{1.0662 * ratio} F552 #4
    {% endif %}

    # Step 2 - Retraction / Nozzle Separation
    # This is where the tip spear shape comes from. Faster=longer/pointer/higher stringing
    {% set total_retraction_distance = cooling_tube_position + cooling_tube_length - 15 %}
    G1 E-15 F{1.0 * unloading_speed_start * 60}
    {% if total_retraction_distance > 0 %}
        {% set dist1 = (0.7 * total_retraction_distance)|round(2) %}
        {% set dist2 = (0.2 * total_retraction_distance)|round(2) %}
        {% set dist3 = (0.1 * total_retraction_distance)|round(2) %}
        
        _MMU_MOVE_SEGMENT DISTANCE=-{dist1} SPEED={1.0 * unloading_speed * 60}
        _MMU_MOVE_SEGMENT DISTANCE=-{dist2} SPEED={0.5 * unloading_speed * 60}
        _MMU_MOVE_SEGMENT DISTANCE=-{dist3} SPEED={0.3 * unloading_speed * 60}
    {% endif %}

    # Set toolchange temperature just prior to cooling moves (not fast skinnydip mode)
    {% if toolchange_temp > 0 %}
        M104 S{toolchange_temp}
        {% if not use_fast_skinnydip %}
            _WAIT_FOR_TEMP
        {% endif %}
    {% endif %}

    # Step 3 - Cooling Moves
    # Solidifies tip shape and helps break strings if formed
    {% set speed_inc = (final_cooling_speed - initial_cooling_speed) / (2 * cooling_moves - 1) %}
    {% for move in range(cooling_moves) %}
        {% set speed = initial_cooling_speed + speed_inc * move * 2 %}
        G1 E{cooling_tube_length} F{speed * 60}
        G1 E-{cooling_tube_length} F{(speed + speed_inc) * 60}
    {% endfor %}

    # Wait for extruder to reach toolchange temperature after cooling moves complete (fast skinnydip only)
    {% if toolchange_temp > 0 and use_skinnydip and use_fast_skinnydip %}
        _WAIT_FOR_TEMP
    {% endif %}

    # Step 4 - Skinnydip
    # Burns off very fine hairs (Good for PLA)
    {% if use_skinnydip %}
        _MMU_MOVE_SEGMENT DISTANCE={skinnydip_distance} SPEED={dip_insertion_speed * 60}
        G4 P{melt_zone_pause}
        _MMU_MOVE_SEGMENT DISTANCE=-{skinnydip_distance} SPEED={dip_extraction_speed * 60}
        G4 P{cooling_zone_pause}
    {% endif %}

    # Set temperature target to next filament temp or starting temp. Note that we don't
    # wait because the temp will settle during the rest of the toolchange
    M104 S{next_temp}
    
    # Step 5 - Parking
    # Optional park filament at fixed location or eject completely (testing)
    {% if final_eject %}
        G92 E0
        _MMU_MOVE_SEGMENT DISTANCE=-80 SPEED={extruder_eject_speed * 60}
    {% elif parking_distance > 0 %}
        G90 # Absolute positioning
        M82 # Absolute extrusion
        _MMU_MOVE_SEGMENT DISTANCE=-{parking_distance} SPEED={extruder_eject_speed * 60}
    {% endif %}

    # Restore state
    RESTORE_GCODE_STATE NAME=MMU_FORM_TIP_state


[gcode_macro _WAIT_FOR_TEMP]
description: Helper function for fan assisted extruder temp reduction
gcode:
    {% set vars = printer['gcode_macro _MMU_FORM_TIP_VARS'] %}
    {% set toolchange_temp = vars['toolchange_temp']|default(0)|int %}
    {% set toolchange_use_fan = vars['toolchange_fan_assist']|default(false)|lower == 'true' %}
    {% set toolchange_fan_speed = vars['toolchange_fan_speed']|default(50)|int %}

    {% if toolchange_use_fan %}
        {% if printer.fan is defined %}
            {% set orig_fan_speed = printer.fan.speed %}
            M106 S{(toolchange_fan_speed / 100 * 255)|int}
            M109 S{toolchange_temp}
            M106 S{(orig_fan_speed * 255)|int}
        {% else %}
            MMU_LOG MSG="Warning: Printer part fan is not defined. Ignoring 'toolchange_use_fan' option" ERROR=1
            M109 S{toolchange_temp}
        {% endif %}
    {% else %}
        M109 S{toolchange_temp}
    {% endif %}
